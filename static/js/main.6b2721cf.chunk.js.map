{"version":3,"sources":["contexts/ContactContext.js","components/AddContact.js","components/ContactDetails.js","components/ContactsList.js","components/ContactContent.js","App.js","reportWebVitals.js","index.js"],"names":["ContactContext","createContext","ContactContextProvider","props","useState","contacts","setContacts","useEffect","axios","get","then","response","data","id","Provider","value","children","AddContact","useContext","name","setName","number","setNumber","alert","setAlert","className","onSubmit","e","preventDefault","inputName","document","querySelector","inputNumber","classList","add","placeholder","length","setTimeout","post","remove","type","onChange","target","ContactDetails","useParams","contact","setContact","onClick","getElementById","put","to","delete","ContactsList","map","exact","path","component","App","ContactContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6b2721cf.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport const ContactContext = createContext();\n\nconst ContactContextProvider = (props) => {\n    const [contacts, setContacts] = useState([]);\n\n    useEffect(() => {\n        axios.get('https://contactsbookapi.herokuapp.com/api/contacts')\n        .then(response => {\n            setContacts(response.data)\n        })\n    }, [contacts.id])\n\n    return (\n        <ContactContext.Provider value={{ contacts, setContacts }}>\n            {props.children}\n        </ContactContext.Provider>\n    )\n}\n\nexport default ContactContextProvider;","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { ContactContext } from '../contexts/ContactContext';\n\nconst AddContact = () => {\n    const { setContacts } = useContext(ContactContext);\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const [alert, setAlert] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        let inputName = document.querySelector('.new-name');\n        let inputNumber = document.querySelector('.new-number');\n        let alert = document.querySelector('.alert');\n\n\n        if (name === '') {\n            inputName.classList.add('alert-red');\n\n            inputName.placeholder = \"Please input name\";\n        } else if (number === '') {\n            inputNumber.classList.add('alert-red');\n\n            inputNumber.placeholder = \"Please input number\";\n        } else if (number.length >= 11) {\n            setTimeout(() => {\n                inputNumber.classList.add('alert-red');\n\n                inputNumber.placeholder = 'Must be smaller than 10 digits';\n            })\n\n            setNumber('');\n\n        } else if (name.length >= 3 && number !== '') {\n            axios.post('https://contactsbookapi.herokuapp.com/api/contacts', {\n                name,\n                number\n            })\n                .then(response => {\n                    setContacts(response.data);\n\n                    setTimeout(() => {\n                        alert.classList.remove('alert-red')\n                        setAlert('Successfully Updated!')\n                    })\n\n                    setTimeout(() => {\n                        setAlert('')\n                    }, 3000)\n\n                })\n                .then(() => {\n                    inputName.classList.remove('alert-red');\n                    inputNumber.classList.remove('alert-red');\n                    inputNumber.placeholder = 'phone number';\n\n                    setName('');\n                    setNumber('');\n                })\n\n        } else {\n            setTimeout(() => {\n                alert.classList.remove('alert-text')\n                alert.classList.add('alert-red')\n\n                inputName.placeholder = \"Must be more than 3 letters\";\n\n            })\n\n            setTimeout(() => {\n                setAlert('')\n            }, 5000)\n            setName('');\n            setNumber('');\n        }\n    }\n\n    const handleNewName = e => {\n        setName(e.target.value)\n    }\n\n    const handleNewNumber = e => {\n        setNumber(e.target.value)\n    }\n\n    return (\n        <div className=\"add-container\">\n            <h3>Add New Contact</h3>\n            <p id=\"alert\" className=\"alert-text\">{alert}</p>\n            <form onSubmit={handleSubmit}>\n                <div className=\"add-contents\">\n                    <label>Name:</label>\n                    <input\n                        className=\"new-name alert\"\n                        type=\"text\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={handleNewName}\n                    />\n\n                    <label>Number</label>\n\n                    <input\n                        className=\"new-number alert\"\n                        type=\"number\"\n                        placeholder=\"phone number\"\n                        value={number}\n                        onChange={handleNewNumber}\n                    />\n\n                    <button\n                        className=\"btn\"\n                        type=\"submit\">Add Contact\n                        </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddContact;","import React, { useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { ContactContext } from '../contexts/ContactContext';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst ContactDetails = () => {\n    const { id } = useParams();\n    const { contacts, setContacts } = useContext(ContactContext);\n    const [contact, setContact] = useState([])\n\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const [alert, setAlert] = useState('')\n\n    useEffect(() => {\n        axios.get(`https://contactsbookapi.herokuapp.com/api/contacts/${id}`)\n            .then(response => {\n                setContact(response.data)\n            })\n    }, [contacts.name])\n\n    const removeContacts = () => {\n        axios.delete(`https://contactsbookapi.herokuapp.com/api/contacts/${id}`)\n            .then(response => {\n                setContacts(response.data)\n            })\n    }\n\n    const handleNameInput = e => {\n        setName(e.target.value)\n    }\n\n    const handleNumberInput = e => {\n        setNumber(e.target.value)\n    }\n\n    const updateInfo = () => {\n        let inputName = document.getElementById('input-name');\n        let inputNumber = document.getElementById('input-number');\n        let alert = document.querySelector('.alert');\n\n\n        if (name === '') {\n            inputName.classList.add('alert-red');\n\n            inputName.placeholder = \"Please input name\";\n        } else if (number === '' ) {\n            inputNumber.classList.add('alert-red');\n\n            inputNumber.placeholder = \"Please input number\";\n        } else if (number.length > 12) {\n            setTimeout(() => {\n                inputNumber.classList.add('alert-red');\n\n                inputNumber.placeholder = 'Must be smaller than 10 digits';\n\n            })\n\n            setNumber('');\n\n          \n        } else if (name.length > 3 && number.length < 11) {\n            axios.put(`https://contactsbookapi.herokuapp.com/api/contacts/${id}`, {\n                name,\n                number\n            })\n                .then(response => {\n                    setContacts(response.data);\n                    \n                    setTimeout(() => {\n                        alert.classList.remove('alert-red')\n                        setAlert('Successfully Updated!')\n                    })\n\n                    setTimeout(() => {\n                        setAlert('')\n                    }, 3000)\n\n                })\n                .then(() => {\n                    inputName.classList.remove('alert-red');\n                    inputNumber.classList.remove('alert-red');\n\n                    inputNumber.placeholder = 'phone number';\n\n                    setName('');\n                    setNumber('');\n                })\n        } else {\n            setTimeout(() => {\n                alert.classList.remove('alert-text')\n                alert.classList.add('alert-red')\n\n                inputName.placeholder = \"Must be more than 3 letters\";\n            })\n\n            setTimeout(() => {\n                setAlert('')\n            }, 5000)\n            setName('');\n            setNumber('');\n        }\n    }\n\n    return (\n        <>\n            <div className=\"details-container\">\n                <h3>Contact Details</h3>\n                <p id=\"alert\" className=\"alert-text\">{alert}</p>\n                <label className=\"name\">Name:</label>\n                <input\n                    id=\"input-name\"\n                    type=\"text\"\n                    className=\"alert\"\n                    value={name}\n                    placeholder={contact.name}\n                    onChange={handleNameInput}\n                />\n                <label className=\"number\">Number:</label>\n                <input\n                    id=\"input-number\"\n                    type=\"number\"\n                    className=\"alert\"\n                    value={number}\n                    placeholder={contact.number}\n                    onChange={handleNumberInput}\n                />\n                <input onClick={updateInfo} type=\"submit\" value=\"Update\" />\n                <Link to='/'><button className=\"del-contacts\" onClick={removeContacts}>Delete</button></Link>\n                <Link to='/'><button className=\"link-back\">Back</button></Link>\n            </div>\n        </>\n    )\n}\n\nexport default ContactDetails;","import React, { useContext } from 'react';\nimport { ContactContext } from '../contexts/ContactContext';\nimport { Link } from 'react-router-dom';\n\nconst ContactsList = () => {\n    const { contacts } = useContext(ContactContext);\n\n    return contacts.length ? (\n        <div className=\"contact-container\">\n            <h3>Contact List</h3>\n\n            <ul className=\"contact-list\">\n                {contacts.map(contact => {\n                    return (\n                        <li className=\"contact-list\" key={contact.id}>\n                            <div>\n                                <p>Name:</p>\n                                <span>{contact.name}</span>\n                            </div>\n                            <div>\n                                <p>Number:</p>\n                                <span id=\"phone\">{contact.number}</span>\n                            </div>\n                            <Link to={`/contacts/${contact.id}`}>\n                            <button className=\"link\">Update</button>\n                            </Link>\n                        </li>\n\n                    )\n                })}\n            </ul>\n        </div>\n    ) : (\n            <div className=\"contact-container\">\n                <h3>No contacts in list</h3>\n            </div>\n        )\n}\n\nexport default ContactsList;","import React from 'react';\nimport ContactDetails from './ContactDetails';\nimport ContactsList from './ContactsList';\nimport { Route, Switch } from \"react-router-dom\"\n\n\nexport default () => {\n\n    return (\n        <>\n        <Switch>\n\t        <Route exact path=\"/\" component={ContactsList}/>\n\t        <Route path=\"/contacts/:id\" component={ContactDetails} />\n\t      </Switch>\n        </>\n    )\n}","import React from 'react';\nimport './App.css';\nimport AddContact from './components/AddContact';\nimport ContactContent from './components/ContactContent';\nimport ContactContextProvider from './contexts/ContactContext';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"container-content\">\n        <ContactContextProvider>\n          <AddContact />\n          <ContactContent />\n        </ContactContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}